---
const { title, url, category, class: className } = Astro.props;

const getCategoryColor = (cat) => {
	const colors = {
		"game systems": "bg-accent-surface",
		referential: "bg-secondary-surface",
	};

	return colors[cat.toLowerCase()] || "";
};
---

<div class:list={["card-frame", className]} data-variant="border">
	<div class:list={["card", "guide-card", className]}>
		<div class="card-body gap-s-rem flex flex-col justify-between">
			<div class="stack stack-space-2xs-rem">
				<a class="card-title card-link underline-on-hover" href={url}>
					{title}
				</a>
				<slot name="summary" />
			</div>
			<p>
				<span
					class={`button chip rounded-sm static ${getCategoryColor(
						category
					)}`}
					data-size="s"
					data-color="neutral"
				>
					{category}
				</span>
			</p>
		</div>
		<div class="card-img">
			<slot name="img">
				<img />
			</slot>
		</div>
	</div>
</div>

<style>
	.guide-card {
		gap: var(--space-2xs-rem);
		padding: var(--space-2xs);
	}

	.card-body {
		padding: var(--space-3xs-2xs);
	}

	.card-img {
		border-radius: var(--space-2xs);
	}
</style>

<style is:global>
	.guide-card .card-img img {
		aspect-ratio: 5 / 2;
		height: 100%;
		object-fit: cover;
		width: 100%;
	}
</style>
