---
import "../css/fonts.css";
import "../css/global.css";
import navigationData from "@data/navigation";
import Nav from "@components/Nav/Nav.astro";
// import LanguageSelect from "@components/LanguageSelect/LanguageSelect.astro";
// import JSTTime from "@components/JSTTime/JSTTime.astro";

const { title, storyblokAttributes = [] } = Astro.props;
const navExpandedRoutes = navigationData.filter((x) => "children" in x);
const rootPathName = "/" + Astro.url.pathname.split("/")[1];
const isSubmenuOpen = Boolean(
	navExpandedRoutes.find((x) => x.url === rootPathName)
);
---

<html lang="en" class:list={[{ "submenu-expanded": isSubmenuOpen }]}>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preconnect" href="https://a-us.storyblok.com/" crossorigin />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title ? `${title} - Bapharia.edu` : "Bapharia.edu"}</title>
		<slot name="head" />
	</head>
	<body>
		<header>
			<Nav />
			<!-- <div class="main-region pbe-0 hidden md:grid">
				<div class="spread">
					<JSTTime />
					<nav
						aria-labelledby="language-select-label-1"
						aria-describedby="language-select-description-1"
					>
						<LanguageSelect />
					</nav>
				</div>
			</div> -->
		</header>
		<div class="main-region stack stack-space-s">
			<main class="stack stack-space-s" {...storyblokAttributes}>
				<slot />
			</main>
		</div>
	</body>
</html>

<script>
	if ("serviceWorker" in navigator) {
		navigator.serviceWorker.register("/service-worker.js").then(
			(registration) =>
				console.log(
					"Service worker registration succeeded:",
					registration
				),
			(error) =>
				console.error(`Service worker registration failed: ${error}`)
		);
	}

	const supportsSessionStorage = storageAvailable("sessionStorage");

	if (supportsSessionStorage && sessionStorage.getItem("scrollbarWidth")) {
		document.documentElement.style.setProperty(
			"--scrollbar-width",
			`${sessionStorage.getItem("scrollbarWidth")}px`
		);
	} else {
		const outer = document.createElement("div");
		outer.style.visibility = "hidden";
		outer.style.overflow = "scroll";
		outer.style.msOverflowStyle = "scrollbar";
		document.body.appendChild(outer);

		const inner = document.createElement("div");
		outer.appendChild(inner);

		const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;

		outer.parentNode.removeChild(outer);

		if (supportsSessionStorage) {
			sessionStorage.setItem("scrollbarWidth", scrollbarWidth);
		}

		document.documentElement.style.setProperty(
			"--scrollbar-width",
			`${scrollbarWidth}px`
		);
	}

	function storageAvailable(type) {
		let storage;

		try {
			storage = window[type];
			const x = "__storage_test__";
			storage.setItem(x, x);
			storage.removeItem(x);
			return true;
		} catch (e) {
			return (
				e instanceof DOMException &&
				// everything except Firefox
				(e.code === 22 ||
					// Firefox
					e.code === 1014 ||
					// test name field too, because code might not be present
					// everything except Firefox
					e.name === "QuotaExceededError" ||
					// Firefox
					e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
				// acknowledge QuotaExceededError only if there's something already stored
				storage &&
				storage.length !== 0
			);
		}
	}
</script>
