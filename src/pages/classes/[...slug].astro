---
import BaseLayout from "@layouts/BaseLayout.astro";
import PageTitle from "@components/PageTitle/PageTitle.astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import {
	useStoryblokApi,
	renderRichText,
	storyblokEditable,
} from "@storyblok/astro";
import { useTranslations } from "src/utils/i18n";
import HeadingNav from "@components/HeadingNav/HeadingNav.astro";
import Details from "@components/Details/Details.astro";

const storyblokApi = useStoryblokApi();
const slug = Astro.params.slug;
const t = await useTranslations("en");
let name;
let content;

try {
	const { data } = await storyblokApi.get(`cdn/stories/classes/${slug}`, {
		version: import.meta.env.DEV ? "draft" : "published",
	});
	name = data.story.content.ui_string;
	content = data.story.content;
} catch (error) {
	return Astro.redirect("/404");
}
---

<BaseLayout
	title={t(`class.${name}`)}
	storyblokAttributes={storyblokEditable(content)}
>
	<PageTitle title={t(`class.${name}`)} align="start">
		<Fragment set:html={renderRichText(content.description)} />
	</PageTitle>
	<div class="content">
		<div class="article">
			<HeadingNav>
				<ul class="list-none">
					<li>
						<a href="#overview">Overview</a>
					</li>
					<li>
						<a href="#skills">Skills</a>
					</li>
					<li>
						<ul class="list-none">
							<li>
								<a href="#base-actions">Base Actions</a>
							</li>
							<li>
								<a href="#tactical-skills">Tactical Skills</a>
							</li>
							<li>
								<a href="#ultimate-skills">Ultimate Skills</a>
							</li>
							<li>
								<a href="#base-abilities">Base Abilities</a>
							</li>
							<li>
								<a href="#class-abilities">Class Abilities</a>
							</li>
						</ul>
					</li>
				</ul>
			</HeadingNav>
			<div class="content-wrapper stack max-is-none">
				<div class="leading-[1.625] stack">
					<h2 id="overview">Overview</h2>
					<Fragment set:html={renderRichText(content.overview)} />
				</div>
				<h2 id="Skills">Skills</h2>
				<div class="stack stack-space-xs">
					{
						content.base_actions?.length > 0 && (
							<Details>
								<h3
									class="skill-category-name"
									id="base-actions"
									slot="summary"
								>
									Base Actions
								</h3>
								<div class="stack stack-space-xs mbs-xs mbe-m-l">
									{content.base_actions.map(
										(skill, index) => (
											<StoryblokComponent
												blok={skill}
												properties={index < 2}
											/>
										),
									)}
								</div>
							</Details>
						)
					}
					{
						content.tactical_skills?.length > 0 && (
							<Details>
								<h3
									class="skill-category-name"
									id="tactical-skills"
									slot="summary"
								>
									Tactical Skills
								</h3>
								<div class="stack stack-space-xs mbs-xs mbe-m-l">
									{content.tactical_skills.map((skill) => (
										<StoryblokComponent blok={skill} />
									))}
								</div>
							</Details>
						)
					}
					{
						content.ultimate_skills?.length > 0 && (
							<Details>
								<h3
									class="skill-category-name"
									id="ultimate-skills"
									slot="summary"
								>
									Ultimate Skills
								</h3>
								<div class="stack stack-space-xs mbs-xs mbe-m-l">
									{content.ultimate_skills.map((skill) => (
										<StoryblokComponent blok={skill} />
									))}
								</div>
							</Details>
						)
					}
					{
						content.base_abilities?.length > 0 && (
							<Details>
								<h3
									class="skill-category-name"
									id="base-abilities"
									slot="summary"
								>
									Base Abilities
								</h3>
								<div class="stack stack-space-xs mbs-xs mbe-m-l">
									{content.base_abilities.map((skill) => (
										<StoryblokComponent
											blok={skill}
											properties={false}
										/>
									))}
								</div>
							</Details>
						)
					}
					{
						content.class_abilities?.length > 0 && (
							<Details>
								<h3
									class="skill-category-name"
									id="class-abilities"
									slot="summary"
								>
									Class Abilities
								</h3>
								<div class="stack stack-space-xs mbs-xs">
									{content.class_abilities.map((skill) => (
										<StoryblokComponent
											blok={skill}
											properties={false}
										/>
									))}
								</div>
							</Details>
						)
					}
				</div>
			</div>
		</div>
	</div>
</BaseLayout>

<style>
	.skill-category-name {
		color: var(--button-color);
	}
</style>

<script>
	import screens from "@data/design-tokens/screen-sizes.json";

	const breakpoint = window.matchMedia(`(min-width: ${screens.xl})`);
	if (breakpoint.matches) {
		document
			.querySelectorAll("details")
			.forEach((details) => (details.open = true));
	}
</script>
