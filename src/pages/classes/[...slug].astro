---
import BaseLayout from "@layouts/BaseLayout.astro";
import PageTitle from "@components/PageTitle/PageTitle.astro";
import HeadingNav from "@components/HeadingNav/HeadingNav.astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import {
	useStoryblokApi,
	renderRichText,
	storyblokEditable,
} from "@storyblok/astro";
import { useTranslations } from "src/utils/i18n";

const storyblokApi = useStoryblokApi();
const slug = Astro.params.slug;
const t = await useTranslations("en");
let name;
let content;

try {
	const { data } = await storyblokApi.get(`cdn/stories/classes/${slug}`, {
		version: import.meta.env.DEV ? "draft" : "published",
	});
	name = data.story.content.ui_string;
	content = data.story.content;
} catch (error) {
	return Astro.redirect("/404");
}
---

<BaseLayout
	title={t(`class.${name}`)}
	storyblokAttributes={storyblokEditable(content)}
>
	<PageTitle title={t(`class.${name}`)} align="start">
		<Fragment set:html={renderRichText(content.description)} />
	</PageTitle>
	<div class="content">
		<div class="article">
			<HeadingNav class="article-nav">
				<ul role="list">
					<li>
						<a href="#overview">Overview</a>
					</li>
					{content.base_actions?.length > 0 && (
						<li>
							<a href="#base-actions">Base Actions</a>
						</li>
					)}
					{content.tactical_skills?.length > 0 && (
						<li>
							<a href="#tactical-skills">Tactical Skills</a>
						</li>
					)}
					{content.ultimate_skills?.length > 0 && (
						<li>
							<a href="#ultimate-skills">Ultimate Skills</a>
						</li>
					)}
					{content.base_abilities?.length > 0 && (
						<li>
							<a href="#base-abilities">Base Abilities</a>
						</li>
					)}
					{content.class_abilities?.length > 0 && (
						<li>
							<a href="#class-abilities">Class Abilities</a>
						</li>
					)}
				</ul>
			</HeadingNav>
			<div class="content-wrapper stack max-is-none">
				<div class="leading-[1.625] stack">
					<h2 id="overview">Overview</h2>
					<Fragment set:html={renderRichText(content.overview)} />
				</div>
				{
					content.base_actions?.length > 0 && (
						<h2 id="base-actions">Base Actions</h2>
						<div class="stack stack-space-s">
							{
								content.base_actions.map((skill, index) => (
									<StoryblokComponent
										blok={skill}
										properties={index < 2}
									/>
								))
							}
						</div>
					)
				}
				{
					content.tactical_skills?.length > 0 && (
						<h2 id="tactical-skills">Tactical Skills</h2>
						<div class="stack stack-space-s">
							{
								content.tactical_skills.map((skill) => (
									<StoryblokComponent blok={skill} />
								))
							}
						</div>
					)
				}
				{
					content.ultimate_skills?.length > 0 && (
						<h2 id="ultimate-skills">Ultimate Skills</h2>
						<div class="stack stack-space-s">
							{
								content.ultimate_skills.map((skill) => (
									<StoryblokComponent blok={skill} />
								))
							}
						</div>
					)
				}
				{
					content.base_abilities?.length > 0 && (
						<h2 id="base-abilities">Base Abilities</h2>
						<div class="stack stack-space-s">
							{
								content.base_abilities.map((skill) => (
									<StoryblokComponent
										blok={skill}
										properties={false}
									/>
								))
							}
						</div>
					)
				}
				{
					content.class_abilities?.length > 0 && (
						<h2 id="class-abilities">Class Abilities</h2>
						<div class="stack stack-space-s">
							{
								content.class_abilities.map((skill) => (
									<StoryblokComponent
										blok={skill}
										properties={false}
									/>
								))
							}
						</div>
					)
				}
			</div>
		</div>
	</div>
</BaseLayout>
