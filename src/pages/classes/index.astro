---
import {
	useStoryblokApi,
	renderRichText,
	storyblokEditable,
} from "@storyblok/astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import PageTitle from "@components/PageTitle/PageTitle.astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

const storyblokApi = useStoryblokApi();
const {
	data: { story },
} = await storyblokApi.get("cdn/stories/classes", {
	version: import.meta.env.DEV ? "draft" : "published",
});
const content = story.content;
---

<BaseLayout
	title={content.title}
	storyblokAttributes={storyblokEditable(content)}
>
	<PageTitle title={content.title}>
		<Fragment set:html={renderRichText(content.subheading)} />
	</PageTitle>
	<div class="content mbs-l-rem sm:mbs-[var(--stack-space)]">
		<div class="sidebar">
			<div>
				<div class="content-wrapper stack leading-[1.625]">
					<Fragment set:html={renderRichText(content.overview)} />
				</div>
			</div>
			<nav aria-label="Classes">
				<ul class="auto-grid list-none">
					{
						content.links.map((link) => (
							<li>
								<StoryblokComponent
									blok={link}
									class="bs-full"
								/>
							</li>
						))
					}
				</ul>
			</nav>
		</div>
	</div>
</BaseLayout>

<style>
	.sidebar {
		--sidebar-target-width: 40.5rem;
		--sidebar-content-min-width: auto;
		align-items: flex-start;
		row-gap: var(--space-xl-rem);
	}

	.auto-grid {
		--grid-min-item-size: var(--space-4xl-5xl-rem);
	}
</style>
